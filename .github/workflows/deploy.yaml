name: Deploy to EC2 with Docker Compose

on:
  workflow_dispatch:
    inputs:
      docker_tag:
        description: "Docker tag to deploy (ex 1.0.0)"
        required: false
        default: "latest"
  workflow_run:
    workflows: ["Publish Docker image on Semver tag push"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    steps:
      - name: Download workflow artifacts
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4.3.0
        with:
          name: docker-metadata
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
        continue-on-error: true

      - name: Read Docker tag
        id: docker_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.docker_tag }}" >> $GITHUB_OUTPUT
          elif [[ -f docker_tag.txt ]]; then
            echo "tag=$(cat docker_tag.txt)" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          retry-max-attempts: 3

      - name: Open SSH port for GitHub Actions
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ vars.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp --port 22 --cidr 0.0.0.0/0 || true

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.AWS_INSTANCE_HOST }}
          port: ${{ secrets.AWS_SSH_PORT }}
          username: oomia
          key: ${{ secrets.AWS_SSH_PK }}
          script: |
            cd BE-auth
            echo "Deploying Docker tag: ${{ steps.docker_tag.outputs.tag }}"
            SPRING_PROFILES_ACTIVE=prod DOCKER_TAG=${{ steps.docker_tag.outputs.tag }} docker compose --profile prod up -d --pull always

      - name: Close SSH port after deploy
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ vars.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp --port 22 --cidr 0.0.0.0/0 || true
