SET client_min_messages = WARNING;

ALTER TABLE IF EXISTS comments
DROP CONSTRAINT IF EXISTS FKagkmt4oa6cdwdop1odcp2ala4;

ALTER TABLE IF EXISTS comments
DROP CONSTRAINT IF EXISTS FK7h839m3lkvhbyv3bcdv7sm4fj;

ALTER TABLE IF EXISTS comments
DROP CONSTRAINT IF EXISTS FKh4c7lvsc298whoyd4w9ta25cr;

ALTER TABLE IF EXISTS likes
DROP CONSTRAINT IF EXISTS FK1m3ercnciq9jolg7t0pe9on6c;

ALTER TABLE IF EXISTS posts
DROP CONSTRAINT IF EXISTS FKf9l8slr2hdv6us03g5fkn5tcd;

ALTER TABLE IF EXISTS posts
DROP CONSTRAINT IF EXISTS FKijnwr3brs8vaosl80jg9rp7uc;

ALTER TABLE IF EXISTS post_tags
DROP CONSTRAINT IF EXISTS FKkifam22p4s1nm3bkmp1igcn5w;

ALTER TABLE IF EXISTS post_tags
DROP CONSTRAINT IF EXISTS FKm6cfovkyqvu5rlm6ahdx3eavj;

ALTER TABLE IF EXISTS refresh_tokens
DROP CONSTRAINT IF EXISTS FK6fm1gdbsrg5h8r5e3voiu6bo9;

ALTER TABLE IF EXISTS user_profiles
DROP CONSTRAINT IF EXISTS FKm9xh4i2a8u1nei2w5nlqrmb2g;

DROP TABLE IF EXISTS accounts CASCADE;

DROP TABLE IF EXISTS authorization_codes CASCADE;

DROP TABLE IF EXISTS categories CASCADE;

DROP TABLE IF EXISTS comments CASCADE;

DROP TABLE IF EXISTS email_authentication_codes CASCADE;

DROP TABLE IF EXISTS likes CASCADE;

DROP TABLE IF EXISTS posts CASCADE;

DROP TABLE IF EXISTS post_tags CASCADE;

DROP TABLE IF EXISTS refresh_tokens CASCADE;

DROP TABLE IF EXISTS tags CASCADE;

DROP TABLE IF EXISTS user_profiles CASCADE;

DROP sequence IF EXISTS accounts_SEQ;

DROP sequence IF EXISTS comments_SEQ;

DROP sequence IF EXISTS likes_SEQ;

DROP sequence IF EXISTS posts_SEQ;

DROP sequence IF EXISTS tags_SEQ;

DROP sequence IF EXISTS user_profiles_SEQ;

CREATE sequence accounts_SEQ start WITH 1 increment BY 50;

CREATE sequence comments_SEQ start WITH 1 increment BY 50;

CREATE sequence likes_SEQ start WITH 1 increment BY 50;

CREATE sequence posts_SEQ start WITH 1 increment BY 50;

CREATE sequence tags_SEQ start WITH 1 increment BY 50;

CREATE sequence user_profiles_SEQ start WITH 1 increment BY 50;

CREATE TABLE accounts (
    is_deleted boolean NOT NULL,
    created_at timestamp(6) NOT NULL,
    deleted_at timestamp(6),
    id bigint NOT NULL,
    updated_at timestamp(6),
    account_type varchar(255) NOT NULL CHECK (
        account_type IN ('PASSWORD', 'OTHER')
    ),
    email varchar(255) NOT NULL UNIQUE,
    password varchar(255) NOT NULL,
    provider_user_id varchar(255),
    role varchar(255) NOT NULL CHECK (
        role IN (
            'USER',
            'CONTENT_MANAGER',
            'SUPERADMIN'
        )
    ),
    PRIMARY KEY (id)
);

CREATE TABLE authorization_codes (
    created_at timestamp(6),
    expired_at timestamp(6),
    id UUID NOT NULL,
    email varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE categories (
    id bigint GENERATED BY DEFAULT AS identity,
    type varchar(255) NOT NULL CHECK (
        type IN (
            'KPOP',
            'ENTERTAINMENT',
            'DRAMA',
            'INFLUENCER',
            'NEWS',
            'MOVIE',
            'ANIMATION',
            'CHALLENGE',
            'NEW_SLANG',
            'TRENDING',
            'ETC',
            'USER_CONTENTS'
        )
    ),
    PRIMARY KEY (id)
);

CREATE TABLE comments (
    is_deleted boolean NOT NULL,
    account_id bigint NOT NULL,
    created_at timestamp(6),
    deleted_at timestamp(6),
    id bigint NOT NULL,
    parent_comment_id bigint,
    post_id bigint NOT NULL,
    updated_at timestamp(6),
    content varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE email_authentication_codes (
    created_at timestamp(6) NOT NULL,
    expired_at timestamp(6) NOT NULL,
    code varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    PRIMARY KEY (email)
);

CREATE TABLE likes (
    account_id bigint NOT NULL,
    created_at timestamp(6),
    id bigint NOT NULL,
    target_id bigint,
    target_type varchar(255) NOT NULL CHECK (
        target_type IN ('POST', 'COMMENT')
    ),
    PRIMARY KEY (id)
);

CREATE TABLE posts (
    is_deleted boolean NOT NULL,
    account_id bigint NOT NULL,
    category_id bigint NOT NULL,
    created_at timestamp(6),
    deleted_at timestamp(6),
    id bigint NOT NULL,
    media_upload_time timestamp(6) NOT NULL,
    updated_at timestamp(6),
    content varchar(255),
    media_url TEXT NOT NULL,
    title varchar(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE post_tags (
    id bigint GENERATED BY DEFAULT AS identity,
    post_id bigint,
    tag_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE refresh_tokens (
    account_id bigint NOT NULL,
    token varchar(1000),
    PRIMARY KEY (account_id)
);

CREATE TABLE tags (
    created_at timestamp(6),
    id bigint NOT NULL,
    name varchar(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE user_profiles (
    account_visible boolean NOT NULL,
    follower_visible boolean NOT NULL,
    is_deleted boolean NOT NULL,
    account_id bigint NOT NULL UNIQUE,
    created_at timestamp(6) NOT NULL,
    deleted_at timestamp(6),
    id bigint NOT NULL,
    updated_at timestamp(6),
    bio varchar(255),
    nickname varchar(255),
    profile_url varchar(255),
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS comments
ADD CONSTRAINT FKagkmt4oa6cdwdop1odcp2ala4 FOREIGN KEY (account_id) REFERENCES accounts;

ALTER TABLE IF EXISTS comments
ADD CONSTRAINT FK7h839m3lkvhbyv3bcdv7sm4fj FOREIGN KEY (parent_comment_id) REFERENCES comments;

ALTER TABLE IF EXISTS comments
ADD CONSTRAINT FKh4c7lvsc298whoyd4w9ta25cr FOREIGN KEY (post_id) REFERENCES posts;

ALTER TABLE IF EXISTS likes
ADD CONSTRAINT FK1m3ercnciq9jolg7t0pe9on6c FOREIGN KEY (account_id) REFERENCES accounts;

ALTER TABLE IF EXISTS posts
ADD CONSTRAINT FKf9l8slr2hdv6us03g5fkn5tcd FOREIGN KEY (account_id) REFERENCES accounts;

ALTER TABLE IF EXISTS posts
ADD CONSTRAINT FKijnwr3brs8vaosl80jg9rp7uc FOREIGN KEY (category_id) REFERENCES categories;

ALTER TABLE IF EXISTS post_tags
ADD CONSTRAINT FKkifam22p4s1nm3bkmp1igcn5w FOREIGN KEY (post_id) REFERENCES posts;

ALTER TABLE IF EXISTS post_tags
ADD CONSTRAINT FKm6cfovkyqvu5rlm6ahdx3eavj FOREIGN KEY (tag_id) REFERENCES tags;

ALTER TABLE IF EXISTS refresh_tokens
ADD CONSTRAINT FK6fm1gdbsrg5h8r5e3voiu6bo9 FOREIGN KEY (account_id) REFERENCES accounts;

ALTER TABLE IF EXISTS user_profiles
ADD CONSTRAINT FKm9xh4i2a8u1nei2w5nlqrmb2g FOREIGN KEY (account_id) REFERENCES accounts;
