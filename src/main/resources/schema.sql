set client_min_messages = WARNING;
alter table if exists comments drop constraint if exists FKagkmt4oa6cdwdop1odcp2ala4;
alter table if exists comments drop constraint if exists FK7h839m3lkvhbyv3bcdv7sm4fj;
alter table if exists comments drop constraint if exists FKh4c7lvsc298whoyd4w9ta25cr;
alter table if exists likes drop constraint if exists FK1m3ercnciq9jolg7t0pe9on6c;
alter table if exists posts drop constraint if exists FKf9l8slr2hdv6us03g5fkn5tcd;
alter table if exists posts drop constraint if exists FKijnwr3brs8vaosl80jg9rp7uc;
alter table if exists post_tags drop constraint if exists FKkifam22p4s1nm3bkmp1igcn5w;
alter table if exists post_tags drop constraint if exists FKm6cfovkyqvu5rlm6ahdx3eavj;
alter table if exists refresh_tokens drop constraint if exists FK6fm1gdbsrg5h8r5e3voiu6bo9;
alter table if exists user_profiles drop constraint if exists FKm9xh4i2a8u1nei2w5nlqrmb2g;
drop table if exists accounts cascade;
drop table if exists authorization_codes cascade;
drop table if exists categories cascade;
drop table if exists comments cascade;
drop table if exists email_authentication_codes cascade;
drop table if exists likes cascade;
drop table if exists posts cascade;
drop table if exists post_tags cascade;
drop table if exists refresh_tokens cascade;
drop table if exists tags cascade;
drop table if exists user_profiles cascade;
drop sequence if exists accounts_SEQ;
drop sequence if exists comments_SEQ;
drop sequence if exists likes_SEQ;
drop sequence if exists posts_SEQ;
drop sequence if exists tags_SEQ;
drop sequence if exists user_profiles_SEQ;
create sequence accounts_SEQ start with 1 increment by 50;
create sequence comments_SEQ start with 1 increment by 50;
create sequence likes_SEQ start with 1 increment by 50;
create sequence posts_SEQ start with 1 increment by 50;
create sequence tags_SEQ start with 1 increment by 50;
create sequence user_profiles_SEQ start with 1 increment by 50;
create table accounts (is_deleted boolean not null, created_at timestamp(6) not null, deleted_at timestamp(6), id bigint not null, updated_at timestamp(6), account_type varchar(255) check (account_type in ('PASSWORD','OTHER')), email varchar(255) unique, password varchar(255), provider_user_id varchar(255), role varchar(255) check (role in ('USER','CONTENT_MANAGER','SUPERADMIN')), primary key (id));
create table authorization_codes (created_at timestamp(6), expired_at timestamp(6), id uuid not null, email varchar(255), primary key (id));
create table categories (id bigint generated by default as identity, type varchar(255) not null check (type in ('KPOP','ENTERTAINMENT','DRAMA','INFLUENCER','NEWS','MOVIE','ANIMATION','CHALLENGE','NEW_SLANG','TRENDING','ETC','USER_CONTENTS')), primary key (id));
create table comments (is_deleted boolean not null, account_id bigint not null, created_at timestamp(6), deleted_at timestamp(6), id bigint not null, parent_comment_id bigint, post_id bigint not null, updated_at timestamp(6), content varchar(255), primary key (id));
create table email_authentication_codes (created_at timestamp(6) not null, expired_at timestamp(6), code varchar(255) not null, email varchar(255) not null, primary key (email));
create table likes (account_id bigint not null, created_at timestamp(6), id bigint not null, target_id bigint, target_type varchar(255) not null check (target_type in ('POST','COMMENT')), primary key (id));
create table posts (is_deleted boolean not null, account_id bigint not null, category_id bigint not null, created_at timestamp(6), deleted_at timestamp(6), id bigint not null, media_upload_time timestamp(6) not null, updated_at timestamp(6), content varchar(255), media_url TEXT not null, title varchar(255) not null, primary key (id));
create table post_tags (id bigint generated by default as identity, post_id bigint, tag_id bigint, primary key (id));
create table refresh_tokens (account_id bigint not null, token varchar(1000), primary key (account_id));
create table tags (created_at timestamp(6), id bigint not null, name varchar(255) not null, primary key (id));
create table user_profiles (account_visible boolean not null, follower_visible boolean not null, is_deleted boolean not null, account_id bigint not null unique, created_at timestamp(6) not null, deleted_at timestamp(6), id bigint not null, updated_at timestamp(6), bio varchar(255), nickname varchar(255), profile_url varchar(255), primary key (id));
alter table if exists comments add constraint FKagkmt4oa6cdwdop1odcp2ala4 foreign key (account_id) references accounts;
alter table if exists comments add constraint FK7h839m3lkvhbyv3bcdv7sm4fj foreign key (parent_comment_id) references comments;
alter table if exists comments add constraint FKh4c7lvsc298whoyd4w9ta25cr foreign key (post_id) references posts;
alter table if exists likes add constraint FK1m3ercnciq9jolg7t0pe9on6c foreign key (account_id) references accounts;
alter table if exists posts add constraint FKf9l8slr2hdv6us03g5fkn5tcd foreign key (account_id) references accounts;
alter table if exists posts add constraint FKijnwr3brs8vaosl80jg9rp7uc foreign key (category_id) references categories;
alter table if exists post_tags add constraint FKkifam22p4s1nm3bkmp1igcn5w foreign key (post_id) references posts;
alter table if exists post_tags add constraint FKm6cfovkyqvu5rlm6ahdx3eavj foreign key (tag_id) references tags;
alter table if exists refresh_tokens add constraint FK6fm1gdbsrg5h8r5e3voiu6bo9 foreign key (account_id) references accounts;
alter table if exists user_profiles add constraint FKm9xh4i2a8u1nei2w5nlqrmb2g foreign key (account_id) references accounts;
